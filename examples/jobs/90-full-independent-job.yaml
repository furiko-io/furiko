# Full configuration of a Job that is created independently of a JobConfig.
#
# To create the Job, run:
#   kubectl create -f https://raw.githubusercontent.com/furiko-io/furiko/main/examples/jobs/90-full-independent-job.yaml
#
# For more in-depth information on other Job fields, refer to https://furiko.io/docs/execution/job/.
---
apiVersion: execution.furiko.io/v1alpha1
kind: Job
metadata:
  generateName: full-independent-job-
spec:
  # Manually specify or override key-value pairs to substitute into the task template.
  substitutions:
    option.username: Example User

  # Describes how to create the Job.
  template:
    # Specifies how to run the job in parallel.
    parallelism:
      # Run 3 tasks in parallel.
      withCount: 3

      # Wait for all 3 tasks to succeed before deemed as successful.
      completionStrategy: AllSuccessful

    # Specifies maximum number of attempts for each task, defaults to 1.
    maxAttempts: 3

    # Optional delay between each task retry.
    retryDelaySeconds: 10

    # Optional duration in seconds for how long each task should be pending for
    # until it gets killed.
    taskPendingTimeoutSeconds: 1800

    # Forbids force deletion of tasks.
    forbidTaskForceDeletion: true

    # The template for each task to be created by the Job.
    taskTemplate:
      # Specify how to create the task as a Pod. This is just a PodTemplateSpec.
      pod:
        spec:
          containers:
            - args:
                - echo
                - "Hello world, ${option.username}!"
              env:
                - name: JOBCONFIG_NAME
                  value: jobconfig-sample
                - name: JOB_NAME
                  value: ${job.name}
                - name: TASK_NAME
                  value: ${task.name}
                - name: TASK_INDEX
                  value: ${task.index_num}
              image: alpine
              name: job-container
              resources:
                limits:
                  cpu: 100m
                  memory: 64Mi

  # Optional duration that the Job should live after it is finished.
  ttlSecondsAfterFinished: 3600
