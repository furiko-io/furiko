# Package the YAML manifests.
before:
  hooks:
    - make yaml

# Build each entrypoint for Docker.
builds:
  - id: execution-controller
    main: ./cmd/execution-controller
    binary: execution-controller
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
  - id: execution-webhook
    main: ./cmd/execution-webhook
    binary: execution-webhook
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64

# Create archive for each entrypoint.
archives:
  - id: execution-controller
    builds:
      - execution-controller
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}"
    wrap_in_directory: true
  - id: execution-webhook
    builds:
      - execution-webhook
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}"
    wrap_in_directory: true

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  use: github-native

# Build Docker images for each entrypoint separately.
dockers:
  - id: execution-controller
    use: buildx
    ids:
      - execution-controller
    image_templates:
      - "furikoio/execution-controller:{{ if (index .Env \"IMAGE_TAG\") }}{{ index .Env \"IMAGE_TAG\" }}{{ else if .IsSnapshot }}v{{ .Version }}{{ else }}{{ .Tag }}{{ end }}"
      - "furikoio/execution-controller:latest"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--target=execution-controller"
  - id: execution-webhook
    use: buildx
    ids:
      - execution-webhook
    image_templates:
      - "furikoio/execution-webhook:{{ if (index .Env \"IMAGE_TAG\") }}{{ index .Env \"IMAGE_TAG\" }}{{ else if .IsSnapshot }}v{{ .Version }}{{ else }}{{ .Tag }}{{ end }}"
      - "furikoio/execution-webhook:latest"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--target=execution-webhook"

# Prepare release assets.
release:
  prerelease: auto
  header: |
    ### üö® Breaking or Notable

    <!-- FIXME: Add release notes -->

    ### üí´ New Features & Changes

    <!-- FIXME: Add release notes -->

    ### üêû Bug Fixes

    <!-- FIXME: Add release notes -->

    ---

    <!-- FIXME: Remove any redundant release notes below this line -->

  # Creates a draft release, so that additional release notes can be added later
  draft: true
  extra_files:
    # Add all YAML manifests to release as well
    - glob: ./yamls/*.yaml
