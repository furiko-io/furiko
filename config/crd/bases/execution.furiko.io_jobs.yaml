---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: jobs.execution.furiko.io
spec:
  group: execution.furiko.io
  names:
    kind: Job
    listKind: JobList
    plural: jobs
    shortNames:
      - furikojob
      - furikojobs
    singular: job
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.phase
          name: Phase
          type: string
        - jsonPath: .status.createdTasks
          name: Created Tasks
          type: string
        - jsonPath: .status.condition.running.startTime
          name: Run Time
          type: date
        - jsonPath: .status.condition.finished.finishTime
          name: Finish Time
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Job is the schema for a single job execution, which may consist of multiple tasks.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: JobSpec defines the desired state of a Job.
              properties:
                configName:
                  description: "ConfigName allows specifying the name of the JobConfig to create the Job from. The JobConfig must be in the same namespace as the Job. \n It is provided as a write-only input field for convenience, and will override the template, labels and annotations from the JobConfig's template. \n This field will never be returned from the API. To look up the parent JobConfig, use ownerReferences."
                  type: string
                killTimestamp:
                  description: Specifies the time to start killing the job. When the time passes this timestamp, the controller will start attempting to kill all tasks.
                  format: date-time
                  type: string
                optionValues:
                  description: "Specifies key-values pairs of values for Options, in JSON or YAML format. \n Example specification: \n spec: optionValues: |- myStringOption: \"value\" myBoolOption: true mySelectOption: - option1 - option3 \n Each entry in the optionValues struct should consist of the option's name, and the value could be an arbitrary type that corresponds to the option's type itself. Each option value specified will be evaluated to a string based on the JobConfig's OptionsSpec and added to Substitutions. If the key also exists in Substitutions, that one takes priority. \n Cannot be updated after creation."
                  type: string
                startPolicy:
                  description: Specifies optional start policy for a Job, which specifies certain conditions which have to be met before a Job is started.
                  properties:
                    concurrencyPolicy:
                      description: Specifies the behaviour when there are other concurrent jobs for the JobConfig.
                      type: string
                    startAfter:
                      description: Specifies the earliest time that the Job can be started after. Can be specified together with other fields.
                      format: date-time
                      type: string
                  required:
                    - concurrencyPolicy
                  type: object
                substitutions:
                  additionalProperties:
                    type: string
                  description: "Defines key-value pairs of context variables to be substituted into the TaskTemplate. Each entry should consist of the full context variable name (i.e. `ctx.name`), and the values must be a string. Substitutions defined here take highest precedence over both predefined context variables and evaluated OptionValues. \n Most users should be using OptionValues to specify custom Job Option values for running the Job instead of using Subsitutions directly. \n Cannot be updated after creation."
                  type: object
                template:
                  description: Template specifies how to create the Job.
                  properties:
                    maxAttempts:
                      description: Specifies maximum number of attempts for the Job. Each attempt will create a single task at a time, and if the task fails, the controller will wait retryDelaySeconds before creating the next task attempt. Once maxAttempts is reached, the Job terminates in RetryLimitExceeded. Value must be a positive integer. Defaults to 1.
                      format: int32
                      type: integer
                    retryDelaySeconds:
                      description: Optional duration in seconds to wait between retries. If left empty or zero, it means no delay (i.e. retry immediately). Value must be a non-negative integer.
                      format: int64
                      type: integer
                    task:
                      description: Describes the tasks to be created for the Job.
                      properties:
                        forbidForceDeletion:
                          description: "ForbidForceDeletion, if true, means that tasks are not allowed to be force deleted. If the node is unresponsive, it may be possible that the task cannot be killed by normal graceful deletion. The controller may choose to force delete the task, which would ignore the final state of the task since the node is unable to return whether the task is actually still alive. \n As such, if not set to true, the Forbid ConcurrencyPolicy may in some cases be violated. Setting this to true would prevent this from happening, but the Job may remain in Killing indefinitely until the node recovers."
                          type: boolean
                        pendingTimeoutSeconds:
                          description: Optional duration in seconds to wait before terminating the task if it is still pending. This field is useful to prevent jobs from being stuck forever if the Job has a deadline to start running by. If not set, it will be set to the DefaultPendingTimeoutSeconds configuration value in the controller. To disable pending timeout, set this to 0.
                          format: int64
                          type: integer
                        template:
                          description: Defines the template to create the task.
                          properties:
                            pod:
                              description: Describes how to create tasks as Pods.
                              properties:
                                metadata:
                                  description: 'Standard object''s metadata, will be added to the Pod when created. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                                  type: object
                                spec:
                                  description: "Specification of the desired behavior of the pod. API docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#podspec-v1-core \n Supports context variable substitution in the following fields for containers and initContainers: image, command, args, env.value"
                                  type: object
                                  x-kubernetes-map-type: atomic
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                      required:
                        - template
                      type: object
                  required:
                    - task
                  type: object
                ttlSecondsAfterFinished:
                  description: Specifies the maximum lifetime of a Job that is finished. If not set, it will be set to the DefaultTTLSecondsAfterFinished configuration value in the controller.
                  format: int64
                  type: integer
                type:
                  description: "Specifies the type of Job. Can be one of: Adhoc, Scheduled \n Default: Adhoc"
                  type: string
              type: object
            status:
              description: JobStatus defines the observed state of a Job.
              properties:
                condition:
                  description: Condition stores details about the Job's current condition.
                  properties:
                    finished:
                      description: Stores the status of the Job's finished state. If specified, it also means that the Job is terminal.
                      properties:
                        createTime:
                          description: The time at which the latest task was created by the controller. May be nil if no tasks were ever created.
                          format: date-time
                          type: string
                        finishTime:
                          description: The time at which the Job was first marked as finished by the controller.
                          format: date-time
                          type: string
                        message:
                          description: Optional descriptive message explaining the condition's last transition.
                          type: string
                        reason:
                          description: Unique, one-word, CamelCase reason for the condition's last transition.
                          type: string
                        result:
                          description: The result of it being finished.
                          type: string
                        startTime:
                          description: The time at which the latest task had started running. May be nil if the task never started running.
                          format: date-time
                          type: string
                      required:
                        - finishTime
                        - result
                      type: object
                    queueing:
                      description: Stores the status of the Job's queueing condition. If specified, it means that the Job is currently not started and is queued.
                      properties:
                        message:
                          description: Optional descriptive message explaining the condition's last transition.
                          type: string
                        reason:
                          description: Unique, one-word, CamelCase reason for the condition's last transition.
                          type: string
                      type: object
                    running:
                      description: Stores the status of the Job's running state. If specified, it means that the Job currently has a running task.
                      properties:
                        createTime:
                          description: The time at which the running task was created by the controller.
                          format: date-time
                          type: string
                        startTime:
                          description: The time at which the running task had started running.
                          format: date-time
                          type: string
                      required:
                        - createTime
                        - startTime
                      type: object
                    waiting:
                      description: Stores the status of the Job's waiting condition. If specified, it means that the Job currently is waiting for a task.
                      properties:
                        createTime:
                          description: The time at which the latest task was created by the controller, if any.
                          format: date-time
                          type: string
                        message:
                          description: Optional descriptive message explaining the condition's last transition.
                          type: string
                        reason:
                          description: Unique, one-word, CamelCase reason for the condition's last transition.
                          type: string
                      type: object
                  type: object
                createdTasks:
                  description: CreatedTasks describes how many tasks were created in total for this Job.
                  format: int64
                  type: integer
                phase:
                  description: Phase stores the high-level description of a Job's state.
                  type: string
                startTime:
                  description: StartTime specifies the time that the Job was started by the controller. If nil, it means that the Job is Queued. Cannot be changed once set.
                  format: date-time
                  type: string
                tasks:
                  description: Tasks contains a list of tasks created by the controller. The controller updates this field when it creates a task, which helps to guard against recreating tasks after they were deleted, and also stores necessary task data for reconciliation in case tasks are deleted.
                  items:
                    description: TaskRef stores information about a Job's owned task.
                    properties:
                      containerStates:
                        description: States of each container for the task. This field will be reconciled from the relevant task object, and is not guaranteed to be up-to-date. This field will persist the state of tasks beyond the lifetime of the task resources, even if they were deleted.
                        items:
                          properties:
                            containerID:
                              description: Container ID of the container. May be empty if the container is not yet created.
                              type: string
                            exitCode:
                              description: Exit status from the last termination of the container
                              format: int32
                              type: integer
                            message:
                              description: Message regarding the container's status.
                              type: string
                            reason:
                              description: Unique, one-word, CamelCase reason for the container's status.
                              type: string
                            signal:
                              description: Signal from the last termination of the container
                              format: int32
                              type: integer
                          required:
                            - exitCode
                          type: object
                        type: array
                      creationTimestamp:
                        description: Creation time of the task.
                        format: date-time
                        type: string
                      deletedStatus:
                        description: "DeletedStatus, if set, specifies a placeholder Status of the task after it is reconciled as deleted. If the task is deleted, Status cannot be reconciled from the task any more, and instead uses information stored in DeletedStatus. In other words, this field acts as a tombstone marker, and is only used after the deletion of the task object is complete. \n While the task is in the process of being deleted (i.e. deletionTimestamp is set but object still exists), Status will still be reconciled from the actual task's status. \n If the task is already deleted and DeletedStatus is also not set, then the task's state will be marked as TaskDeletedFinalStateUnknown."
                        properties:
                          message:
                            description: Descriptive message for the task's status.
                            type: string
                          reason:
                            description: Unique, one-word, CamelCase reason for the task's status.
                            type: string
                          result:
                            description: The execution result derived from this task if it was finished. For simplicity, the values of this field also matches that of the Job's result field.
                            type: string
                          state:
                            description: State of the task.
                            type: string
                        required:
                          - state
                        type: object
                      finishTimestamp:
                        description: Time that the task finished. Will always return a non-zero timestamp if task is finished.
                        format: date-time
                        type: string
                      name:
                        description: Name of the task. Assumes to share the same namespace as the Job.
                        type: string
                      nodeName:
                        description: Node name that the task was bound to. May be empty if task was never scheduled.
                        type: string
                      runningTimestamp:
                        description: Timestamp that the task transitioned to running. May be zero if the task was never observed as started running.
                        format: date-time
                        type: string
                      status:
                        description: Status of the task. This field will be reconciled from the relevant task object, may not be always up-to-date. This field will persist the state of tasks beyond the lifetime of the task resources, even if they are deleted.
                        properties:
                          message:
                            description: Descriptive message for the task's status.
                            type: string
                          reason:
                            description: Unique, one-word, CamelCase reason for the task's status.
                            type: string
                          result:
                            description: The execution result derived from this task if it was finished. For simplicity, the values of this field also matches that of the Job's result field.
                            type: string
                          state:
                            description: State of the task.
                            type: string
                        required:
                          - state
                        type: object
                    required:
                      - containerStates
                      - creationTimestamp
                      - name
                      - status
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
              required:
                - condition
                - phase
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  preserveUnknownFields: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
