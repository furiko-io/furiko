name: Perform CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: v1.31.0
          args: --timeout=5m

  generate-lint:
    runs-on: ubuntu-latest
    # NOTE(irvinlim): Need to operate in GOPATH in order for generate-groups.sh to succeed (see Makefile).
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
        with:
          path: "go/src/github.com/${{ github.repository }}"
      - name: Generate code
        run: make generate
        env:
          GOPATH: /home/runner/work/furiko/go
        working-directory: "go/src/github.com/${{ github.repository }}"
      - name: Check for differences
        run: git add . && git diff --exit-code --staged
        working-directory: "go/src/github.com/${{ github.repository }}"

  license-header-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: make lint-license

  go-test:
    needs:
      - golangci-lint
      - generate-lint
    strategy:
      matrix:
        go-version: [ 1.17 ]
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run tests
        run: make test
      - name: Push code coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./combined.cov
        # Push code coverage only for one of the environments
        if: matrix.platform == 'ubuntu-latest'
